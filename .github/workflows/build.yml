# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ ios-jb ]
  pull_request:
    branches: [ ios-jb ]

jobs:
  build:
    runs-on: macos-10.15
    
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Install build utilities
      run: |
        brew install ninja bartycrouch
        pip3 install polib
    
    - name: Run CocoaPods
      run: |
        cd Source/iOS/DolphiniOS
        pod install
        
    - name: Decrypt Firebase Property List
      run: |
        cd Source/iOS/DolphiniOS/DolphiniOS
        gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.FIREBASE_GPG_PASSWORD }}" --output GoogleService-Info.plist GoogleService-Info.plist.gpg
      
    - name: Build test
      env:
        CODE_SIGNING_ALLOWED: "NO"
        CODE_SIGNING_REQUIRED: "NO"
        CODE_SIGN_ENTITLEMENTS: ""
        CODE_SIGN_IDENTITY: ""
        BUILD_DIR: "${{ github.workspace }}/build-Xcode"
      run: |
        mkdir build-Xcode
        cd Source/iOS/DolphiniOS
        xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Jailbroken)" -scheme "DolphiniOS"
        xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Patreon)" -scheme "DolphiniOS"
        xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Non-Jailbroken)" -scheme "DolphiniOS"
        xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Patreon Non-Jailbroken)" -scheme "DolphiniOS" 
    
    - name: tmate
      uses: mxschmitt/action-tmate@v2
