# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ ios-jb ]
  pull_request:
    branches: [ ios-jb ]

jobs:
  build:
    runs-on: macos-10.15
    
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Install build utilities
      run: |
        brew install ninja bartycrouch s3cmd
        pip3 install polib
        
    - name: Create Keychain
      run: |
        security create-keychain -p alpine build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p alpine build.keychain
        security import Source/iOS/DolphiniOS/DolphiniOS/BuildResources/OatmealDomeSoftware.p12 -k build.keychain -P ${{ secrets.CERTIFICATE_GPG_PASSWORD }}
        security set-key-partition-list -S apple-tool:,apple: -s -k alpine build.keychain
        
    - name: Decrypt Firebase Property List
      run: |
        cd Source/iOS/DolphiniOS/DolphiniOS
        gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.FIREBASE_GPG_PASSWORD }}" --output GoogleService-Info.plist GoogleService-Info.plist.gpg
    
    - name: Cache CocoaPods
      uses: actions/cache@v1
      with:
        path: Source/iOS/DolphiniOS/Pods
        key: ${{ runner.OS }}-pods-cache-${{ hashFiles('**/Source/iOS/DolphiniOS/Podfile.lock') }}
    
    - name: Run CocoaPods
      run: |
        cd Source/iOS/DolphiniOS
        pod install
      
    - name: Build
      env:
        XCODEBUILD_ARGS: "BUILD_DIR=${{ github.workspace }}/build-Xcode CODE_SIGNING_ALLOWED=\"NO\" CODE_SIGNING_REQUIRED=\"NO\" CODE_SIGN_ENTITLEMENTS=\"\" CODE_SIGN_IDENTITY=\"\"" 
      run: |
        mkdir build-Xcode
        cd Source/iOS/DolphiniOS
        xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Jailbroken)" -scheme "DolphiniOS" ${{ env.XCODEBUILD_ARGS }}
        #xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Patreon)" -scheme "DolphiniOS" ${{ env.XCODEBUILD_ARGS }}
        #xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Non-Jailbroken)" -scheme "DolphiniOS" ${{ env.XCODEBUILD_ARGS }}
        #xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Patreon Non-Jailbroken)" -scheme "DolphiniOS" {{ env.XCODEBUILD_ARGS }}
        
    - name: Package
      env:
        PROJECT_DIR: "${{ github.workspace }}/Source/iOS/DolphiniOS"
        ARCHIVE_PATH: "${{ github.workspace }}/build-Xcode/archive-root"
        BUILD_FOR_PATREON: "NO"
      run: |
        mkdir -p ${{ env.ARCHIVE_PATH }}/Products/Applications/
        cp -R "${{ github.workspace }}/build-Xcode/Release (Jailbroken)-iphoneos/DolphiniOS.app" ${{ env.ARCHIVE_PATH }}/Products/Applications/
        Source/iOS/DolphiniOS/DolphiniOS/BuildResources/BuildScripts/BuildDebs.sh ${{ github.workspace }}/build.keychain
        
    - name: tmate
      uses: mxschmitt/action-tmate@v2
