name: Build

on:
  push:
    branches: [ ios-jb ]
  pull_request:
    branches: [ ios-jb ]

jobs:
  build:
    runs-on: macos-10.15
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install build utilities
      run: |
        brew install ninja bartycrouch dpkg s3cmd libmagic
        pip3 install polib python-magic
        
    - name: Create Keychain
      run: |
        security create-keychain -p alpine build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p alpine build.keychain
        security set-keychain-settings -t 36000 build.keychain
        security import Source/iOS/DolphiniOS/DolphiniOS/BuildResources/OatmealDomeSoftware.p12 -k build.keychain -P ${{ secrets.CERTIFICATE_GPG_PASSWORD }} -A
        security set-key-partition-list -S apple-tool:,apple: -s -k alpine build.keychain
        
    - name: Decrypt Firebase Property List
      run: |
        cd Source/iOS/DolphiniOS/DolphiniOS
        gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.FIREBASE_GPG_PASSWORD }}" --output GoogleService-Info.plist GoogleService-Info.plist.gpg
    
    - name: Cache CocoaPods
      uses: actions/cache@v1
      with:
        path: Source/iOS/DolphiniOS/Pods
        key: ${{ runner.OS }}-pods-cache-${{ hashFiles('**/Source/iOS/DolphiniOS/Podfile.lock') }}
    
    - name: Run CocoaPods
      run: |
        cd Source/iOS/DolphiniOS
        pod install
      
    - name: Build
      env:
        XCODEBUILD_ARGS: "BUILD_DIR=${{ github.workspace }}/build-Xcode CODE_SIGNING_ALLOWED=\"NO\" CODE_SIGNING_REQUIRED=\"NO\" CODE_SIGN_ENTITLEMENTS=\"\" CODE_SIGN_IDENTITY=\"\"" 
      run: |
        mkdir build-Xcode
        cd Source/iOS/DolphiniOS
        xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Jailbroken)" -scheme "DolphiniOS" ${{ env.XCODEBUILD_ARGS }}
        #xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Patreon)" -scheme "DolphiniOS" ${{ env.XCODEBUILD_ARGS }}
        #xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Non-Jailbroken)" -scheme "DolphiniOS" ${{ env.XCODEBUILD_ARGS }}
        #xcodebuild -workspace DolphiniOS.xcworkspace -configuration "Release (Patreon Non-Jailbroken)" -scheme "DolphiniOS" {{ env.XCODEBUILD_ARGS }}    
      
    - name: Package
      env:
        PROJECT_DIR: "${{ github.workspace }}/Source/iOS/DolphiniOS"
        ARCHIVE_PATH: "${{ github.workspace }}/build-Xcode/archive-root"
        BUILD_FOR_PATREON: "NO"
        IS_CI: "YES"
      run: |
        mkdir -p ${{ env.ARCHIVE_PATH }}/Products/Applications/
        cp -R "${{ github.workspace }}/build-Xcode/Release (Jailbroken)-iphoneos/DolphiniOS.app" ${{ env.ARCHIVE_PATH }}/Products/Applications/
        Source/iOS/DolphiniOS/DolphiniOS/BuildResources/BuildScripts/BuildDebs.sh build.keychain JB_DEB_PATH
        
    - name: Upload
      env:
        S3CMD_ARGS: "--access_key=${{ secrets.SPACES_KEY }} --secret_key=${{ secrets.SPACES_SECRET }} --host=${{ secrets.SPACES_ENDPOINT }} --host-bucket=%\\(bucket\\)s.${{ secrets.SPACES_ENDPOINT }}"
        BUCKET_ROOT_PATH: "s3://wii-sports/dolphinios/ci/"
      run: |
        s3cmd put ${{ env.JB_DEB_PATH }}/DolphiniOS.deb ${{ env.BUCKET_ROOT_PATH }}/DolphiniOS-JB-${{ github.run_number }}.deb ${{ env.S3CMD_ARGS }}
